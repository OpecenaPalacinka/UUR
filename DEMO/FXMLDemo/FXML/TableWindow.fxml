<?xml version="1.0" encoding="UTF-8"?>

<?import java.lang.String?>
<?import java.lang.Boolean?>
<?import java.net.InetAddress?>
<?import javafx.collections.FXCollections?>
<?import javafx.scene.layout.BorderPane?>
<?import javafx.scene.control.MenuBar?>
<?import javafx.scene.control.Menu?>
<?import javafx.scene.control.MenuItem?>
<?import javafx.scene.control.TableView?>
<?import javafx.scene.layout.FlowPane?>
<?import javafx.scene.control.TableColumn?>
<?import javafx.scene.control.SeparatorMenuItem?>
<?import javafx.scene.control.cell.MapValueFactory?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.layout.GridPane?>
<?import javafx.scene.control.Label?>
<?import javafx.geometry.Insets?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.control.Button?>
<?import javafx.scene.control.cell.TextFieldTableCell?>
<?import javafx.scene.control.cell.CheckBoxTableCell?>
<?import javafx.scene.control.cell.PropertyValueFactory?>
<?import cz.zcu.kiv.lipka.uur.exercise09.IPEditorField?>
<?import cz.zcu.kiv.lipka.uur.exercise09.IPEditorTableCellFactory?>
<?import cz.zcu.kiv.lipka.uur.exercise09.IPEditorTableCell?>
<?import cz.zcu.kiv.lipka.uur.exercise09.Connection?>

<!-- creating root of the scene -->
<!-- note that Controller name is provided here -->
<BorderPane xmlns:fx="http://javafx.com/fxml/1" fx:controller="cz.zcu.kiv.lipka.uur.exercise09.TableController">
	<!-- creates menu and adding it to the top of the border pane -->
	<top >
		<MenuBar >
			<!-- allowing mnemonic parsing in the menu -->
			<Menu text="_Edit" mnemonicParsing="true">
				<items>
					<!-- adding menu items with service methods -->
					<!-- the names of onAction methods have to correspond -->
					<!-- to names of methods in Controller -->
					<MenuItem text="_Add new" onAction="#addRow"/>
					<MenuItem text="_Delete" onAction="#removeRow"/>				
					<SeparatorMenuItem />	
					<MenuItem text="_Close" onAction="#terminate"/>
				</items>
			</Menu>
		</MenuBar>
	</top>
	<!-- creates table and places it to the center -->
	<center>		
		<TableView fx:id="connectionTable" editable="true">			
			<!-- table will resize all columns -->		
			<columnResizePolicy>
      			<TableView fx:constant="CONSTRAINED_RESIZE_POLICY" />
   			</columnResizePolicy>
   			<!-- creating columns of the table -->
			<columns>
				<TableColumn text="Program" prefWidth="200" minWidth="200" onEditCommit="#nameCommit">
					<!-- adding value factory - factory that is able to  -->
					<!-- get data by setter (getName in this case) -->
					<!-- getName method must be present in each object in -->
					<!-- the data model of the table -->
					<cellValueFactory>
						<PropertyValueFactory property="name" />
					</cellValueFactory>
					<!-- adding factory to create editable text field components -->
					<cellFactory>
						<!-- there is no visible factory class for this -->
						<!-- type of the table cells, but there is a factory -->
						<!-- method that can be used instead -->
						<TextFieldTableCell fx:factory="forTableColumn" />						
					</cellFactory>						
				</TableColumn>
				<TableColumn text="Source" minWidth="150" maxWidth="150" prefWidth="150" onEditCommit="#sourceCommit">
					<cellValueFactory>
						<PropertyValueFactory property="source" />
					</cellValueFactory>
					<!-- adding factory to create table cells -->
					<cellFactory>
						<!-- Factory class is directly available -->
						<IPEditorTableCellFactory />
					</cellFactory>									
				</TableColumn>
				<TableColumn text="Target" minWidth="150" maxWidth="150" prefWidth="150" onEditCommit="#targetCommit">
					<cellValueFactory>
						<PropertyValueFactory property="target" />
					</cellValueFactory>
					<cellFactory>
						<IPEditorTableCellFactory />
					</cellFactory>									
				</TableColumn>
			</columns>
			<!-- creating items that will be display after start of the -->
			<!-- application -->
			<items>
				<!-- creating collection by using factory method -->
				<FXCollections fx:factory="observableArrayList">
					<!-- creating content of the collection -->					
					<Connection>
						<name>
							<String fx:value="Server A" />
						</name>				
						<source>
							<InetAddress fx:factory="getLocalHost" />
						</source>
						<target>
							<InetAddress fx:factory="getLocalHost" />
						</target>						
					</Connection>
					<Connection>
						<name>
							<String fx:value="Server B" />
						</name>						
					</Connection>

					<Connection>
						<name>
							<String fx:value="Server C" />
						</name>						
					</Connection>					
				</FXCollections>				
			</items>
		</TableView>		
	</center>
	<!-- Create text area on the right side of the window -->
	<right>
		<TextArea fx:id="logTA" editable="false" minWidth="200" prefWidth="200" maxWidth="200">
		</TextArea>
	</right>
	<!-- Create panel with buttons on the bottom of the application -->
	<bottom>
		<GridPane hgap="3" vgap="3" alignment="CENTER">		
			<children>
				<!-- note the static methods for setting row and column index -->
				<Label text="Program name:" GridPane.rowIndex="0" GridPane.columnIndex="0" />
				<Label text="Source:" GridPane.rowIndex="0" GridPane.columnIndex="1" />
				<Label text="Target:" GridPane.rowIndex="0" GridPane.columnIndex="2" />
				<TextField fx:id="programTF" GridPane.rowIndex="1" GridPane.columnIndex="0" />
				<IPEditorField fx:id="sourceIP" GridPane.rowIndex="1" GridPane.columnIndex="1" />
				<IPEditorField fx:id="targetIP" GridPane.rowIndex="1" GridPane.columnIndex="2" />
				<Button text="Add" onAction="#addRow" GridPane.rowIndex="0" GridPane.columnIndex="4" GridPane.rowSpan="2"/>
				<Button text="Display" onAction="#displayRow" GridPane.rowIndex="0" GridPane.columnIndex="5" GridPane.rowSpan="2"/>
			</children>
			<padding>
				<Insets bottom="5" top="5" left="5" right="5" />	
			</padding>
		</GridPane>
	</bottom>
</BorderPane>

